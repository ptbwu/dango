{
    "version": "5.22.0",
    "description": "A platform for building proxies to bypass network restrictions.",
    "homepage": "https://www.v2fly.org/en_US/",
    "license": "MIT",
    "architecture": {
        "64bit": {
            "url": "https://github.com/v2fly/v2ray-core/releases/download/v5.22.0/v2ray-windows-64.zip",
            "hash": "db5d62b821aa4e6dde92a0af55e161ba551e651564d2e4474cb3da8a9801a355"
        },
        "32bit": {
            "url": "https://github.com/v2fly/v2ray-core/releases/download/v5.22.0/v2ray-windows-32.zip",
            "hash": "efdb8ac8d39ec8e71a337f0a1bb17a31c143db0761b6e0e755ecf4d17bdee7a1"
        }
    },
    "installer": {
        "script": [
            "#v2ctl.exe cannot recognize signature file when there are spaces in path. This is a workaround to eliminate spaces.",
            "Write-Host 'Verifying V2Ray binary...' -f Yellow",
            "$sig_dir = \"$Env:SystemRoot\\Temp\\v2ray\"",
            "ensure $sig_dir | Out-Null",
            "Invoke-WebRequest \"https://github.com/v2fly/v2ray-core/releases/download/v$version/Release\" -OutFile $sig_dir\\Release",
            "if (!(Invoke-Expression \"&`\"$dir\\v2ctl.exe`\" verify --sig=$sig_dir\\Release `\"$dir\\v2ray.exe`\"\" | Select-String 'OK')) {",
            "    Write-Host 'V2Ray binary is corrupted!' -f Red",
            "    break",
            "}",
            "Remove-Item $sig_dir -Force -Recurse | Out-Null"
        ]
    },
    "bin": [
        "v2ctl.exe",
        "v2ray.exe",
        "wv2ray.exe"
    ],
    "persist": "config.json",
    "checkver": {
        "github": "https://github.com/v2fly/v2ray-core"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://github.com/v2fly/v2ray-core/releases/download/v$version/v2ray-windows-64.zip"
            },
            "32bit": {
                "url": "https://github.com/v2fly/v2ray-core/releases/download/v$version/v2ray-windows-32.zip"
            }
        },
        "hash": {
            "url": "$url.dgst",
            "regex": "SHA512= $sha512"
        }
    }
}
